{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },
    "vmHostName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM to create"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account for VM OS Disks (must be 3-24 lowercase alphanumeric characters)"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Instance size for the container host VMs"
      }
    }
  },
  "variables": {
    "adminUserName": "core",
    "virtualNetworkName": "AzureLabVNET",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "hostSubnet",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressType": "Static",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "imageSku": "Stable",
    "vmStorageAccountContainerName": "vhds",
    "storageAccountType": "Standard_LRS",
    "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
    "hostIgnition": "[concat('{\"ignition\":{\"version\":\"2.0.0\"},\"systemd\":{\"units\":[{\"name\":\"etcd2.service\",\"enable\":true,\"dropins\":[{\"name\":\"metadata.conf\",\"contents\":\"[Unit]\\nRequires=coreos-metadata.service\\nAfter=coreos-metadata.service\\n\\n[Service]\\nEnvironmentFile=/run/metadata/coreos\\nExecStart=\\nExecStart=/usr/bin/etcd2 --name ',parameters('vmHostName'),' --initial-cluster ',parameters('vmHostName'),'=http://${COREOS_AZURE_IPV4_DYNAMIC}:2380 --advertise-client-urls http://${COREOS_AZURE_IPV4_DYNAMIC}:2379 --initial-advertise-peer-urls http://${COREOS_AZURE_IPV4_DYNAMIC}:2380 --listen-client-urls http://${COREOS_AZURE_IPV4_DYNAMIC}:2379,http://127.0.0.1:2379 --listen-peer-urls http://${COREOS_AZURE_IPV4_DYNAMIC}:2380\"}]}]}}')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmHostName'), '-publicIP')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmHostName'), '-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmHostName'), '-publicIP')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "apiVersion": "2015-06-15",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('vmHostName'), '-publicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmHostName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('vmHostName'), '-nic')]"
      ],
      "apiVersion": "2015-06-15",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.chinacloudapi.cn')]"
          }
        },
        "osProfile": {
          "computerName": "[parameters('vmHostName')]",
          "adminUsername": "[variables('adminUsername')]",
          "customData": "[base64(variables('hostIgnition'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "CoreOS",
            "offer": "CoreOS",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('vmHostName')]",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/',parameters('vmHostName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmHostName'), '-nic'))]"
            }
          ]
        }
      }
    }
  ]
}
